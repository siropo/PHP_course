@mixin font($font: 0, $size: 10, $color: null, $textAlign: null) {
  $remSize: $size/16;
  @if $font != null {
    @if $font == 0 {
      font-size: #{$size}px;
      font-size: #{$remSize}rem;
      font-family: 'Verdana', 'Trebuchet MS', serif;
    } @else if $font == 1 {
      font-size: #{$size}px;
      font-size: #{$remSize}rem;
      font-family: 'Ariel', 'Trebuchet MS', serif;
    } @else if $font == 2 {
      font-size: #{$size}px;
      font-size: #{$remSize}rem;
      font-family: 'Trebuchet MS', serif;
    }
  }

  @if $color != null {
    color: $color;
  }

  @if $textAlign != null {
    text-align: $textAlign;
  }
}

@mixin font-size($size, $color: null, $textAlign: null) {
  $remSize: $size/16;
  font-size: #{$size}px;
  font-size: #{$remSize}rem;

  @if $color != null {
    color: $color;
  }

  @if $textAlign != null {
    text-align: $textAlign;
  }
}

@mixin opacity($opacity: 0.5) {
  filter: alpha(opacity=($opacity * 100));
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + ($opacity * 100) + ")";
  -moz-opacity: $opacity;
  -khtml-opacity: $opacity;
  opacity: $opacity;
}

@mixin border-radius($radius: 5px) {
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

@mixin border($colour: #000, $coordinates: 1px, $style: solid) {

  @if $colour != 0 {

    @if $coordinates == 1px {
      border: $coordinates $style $colour;
    } @else {
      $top: nth($coordinates, 1);
      $right: nth($coordinates, 2);
      $bottom: nth($coordinates, 3);
      $left: nth($coordinates, 4);

      @if not(unitless($top)) {
        border-top: $top $style $colour;
      }
      @if not(unitless($right)) {
        border-right: $right $style $colour;
      }
      @if not(unitless($bottom)) {
        border-bottom: $bottom $style $colour;
      }
      @if not(unitless($left)) {
        border-left: $left $style $colour;
      }
    }
  } @else {
    border: 0;
  }
}

@mixin box-shadow($params: 0 0 0 0, $color: rgba(0, 0, 0, .4), $inset: null) {
  @if $inset != null {
    -webkit-box-shadow: $inset $params $color;
    -moz-box-shadow: $inset $params $color;
    box-shadow: $inset $params $color;
  } @else {
    -webkit-box-shadow: $params $color;
    -moz-box-shadow: $params $color;
    box-shadow: $params $color;
  }
}

@mixin transition($what: all, $length: 1s, $easing: ease-in-out) {
  -moz-transition:    $what $length $easing;
  -o-transition:      $what $length $easing;
  -webkit-transition: $what $length $easing;
  -ms-transition:     $what $length $easing;
  transition:         $what $length $easing;

}

@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, .4)) {
  text-shadow: $x $y $blur $color;
}

@mixin button-gradient($startColor: #1e5799, $middleColor: #4c92cd, $endColor: #034194, $type: default, $textColor: default) {

  background: #1e5799;
  background: -moz-linear-gradient(top, $startColor 0%, $middleColor 0%, $endColor 100%);
  background: -webkit-linear-gradient(top, $startColor 0%, $middleColor 0%, $endColor 100%);
  background: -o-linear-gradient(top, $startColor 0%, $middleColor 0%, $endColor 100%);
  background: -ms-linear-gradient(top, $startColor 0%, $middleColor 0%, $endColor 100%);
  background: linear-gradient(to bottom, $startColor 0%, $middleColor 0%, $endColor 100%);
  @include border(#064ADB);

  @include border-radius(5px);
  -moz-box-shadow: 1px 1px 0 0 rgba(255, 255, 255, .4) inset, 0 1px 0 rgba(0, 0, 0, .3);
  -webkit-box-shadow: 1px 1px 0 0 rgba(255, 255, 255, .4) inset, 0 1px 0 rgba(0, 0, 0, .3);
  box-shadow: 0px 1px 0 0 rgba(255, 255, 255, .4) inset, 0 1px 0 rgba(0, 0, 0, .3);
  text-decoration: none;
  white-space: nowrap;
  @include font(2);

  @if $textColor == default {
    color: #fff;
    @include text-shadow(-1px, -2px, 0, rgba(46, 46, 46, .6));
  } @else {
    color: #313131;
    @include text-shadow(-1px, -2px, 0, rgba(255, 255, 255, 0.6));
  }

  @if $type == dark {
    &:hover {
      background: -moz-linear-gradient(top, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      background: -webkit-linear-gradient(top, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      background: -o-linear-gradient(top, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      background: -ms-linear-gradient(top, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      background: linear-gradient(to bottom, $startColor 0%, darken($middleColor, 10%) 0%, $endColor 100%);
      color: #313131;
    }
  } @else {
    &:hover {
      background: -moz-linear-gradient(top, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      background: -webkit-linear-gradient(top, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      background: -o-linear-gradient(top, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      background: -ms-linear-gradient(top, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      background: linear-gradient(to bottom, $startColor 0%, lighten($middleColor, 10%) 0%, $endColor 100%);
      color: #fff;
    }
  }

}

@mixin clearfix {
  zoom:1;
  &:before, &:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden;
  }
  &:after {
    clear: both;
  }
}

@mixin fixmargin-top {
  margin-top: -1px;
  padding-top: 1px;
}

